# version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: areal-hr-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - areal-network
    

  server:
    build:
      context: ./server
      dockerfile: ../containers/server/Dockerfile
    container_name: areal-hr-server
    ports:
      - "${VITE_APP_PORT_SERVER}:5001"
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_LOGIN=${ADMIN_LOGIN}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - APP_URL=${APP_URL}
      - VITE_APP_PORT_SERVER=${VITE_APP_PORT_SERVER}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/src/uploads:/app/src/uploads 
    restart: unless-stopped
    networks:
      - areal-network
    command: sh -c "npm run migrate:up && npm run dev"

  client:
    build:
      context: .
      dockerfile: containers/client/Dockerfile
    container_name: areal-hr-client
    # ports:
    #   - "${VITE_APP_PORT}:80"
    depends_on:
      - server
    environment:
      - VITE_APP_URL=${VITE_APP_URL}
      - VITE_APP_PORT=${VITE_APP_PORT}
      - VITE_API_BASE_URL=/ 
    # volumes:
    #   - ./client:/app
    #   - /app/node_modules
    restart: unless-stopped
    networks:
      - areal-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: areal-hr-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - areal-network

  nginx:
    build:
      context: .
      dockerfile: containers/client/Dockerfile
    volumes:
      - ./server/src/uploads:/usr/share/nginx/html/uploads
    ports:
      - "5000:80"
    depends_on:
      - server
    networks:
      - areal-network

networks:
  areal-network:
    driver: bridge

volumes:
  postgres_data:


  

